name: CI

on:
  push:
    branches:
      - main
    paths:
      - public
      - "components/**/*.ts[x]?"
      - "pages/**/*.ts[x]?"
      - styles/**/*.css
      - "*.config.[cm]js"
  pull_request:
    branches:
      - main
    paths:
      - public
      - "components/**/*.ts[x]?"
      - "pages/**/*.ts[x]?"
      - styles/**/*.css
      - "*.config.[cm]js"

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7.29.1
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "19.3.0"
          cache: pnpm
      - name: Install dependencies
        run: pnpm i
      - name: Cache build output
        uses: actions/cache@v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ci-${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ci-${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
      - name: Build static site
        run: pnpm build
